# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];
  boot = {
    kernelModules = ["kvm-intel"];
    extraModulePackages = [];
    initrd = {
      availableKernelModules = ["xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod"];
      kernelModules = [];
      luks.devices = {
        "luks-dbde486f-02b2-48f3-b0d6-685459a90232".device = "/dev/disk/by-uuid/dbde486f-02b2-48f3-b0d6-685459a90232";
        "luks-eff08501-3319-4fb6-ab74-088e346c6e33".device = "/dev/disk/by-uuid/eff08501-3319-4fb6-ab74-088e346c6e33";
      };
    };
  };

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/8b5a04c9-4c0b-413d-b698-2adc560e7fc3";
      fsType = "ext4";
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/A64D-79EB";
      fsType = "vfat";
      options = ["fmask=0022" "dmask=0022"];
    };
  };
  swapDevices = [
    {device = "/dev/disk/by-uuid/d33ffa13-bb13-4de5-a5a0-35dd8c1d572b";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
